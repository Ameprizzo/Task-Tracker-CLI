name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build:
    name: Build binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: ["1.22.x"]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Set OS-specific Environment Variables
        run: |
          echo "GOARCH=amd64" >> $GITHUB_ENV
        shell: bash
        if: runner.os == 'Linux' || runner.os == 'macOS'

      - name: Set OS-specific Environment Variables for Windows
        run: |
          echo "GOOS=windows" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "GOARCH=amd64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        shell: pwsh
        if: runner.os == 'Windows'

      - name: Build for ${{ matrix.os }}
        run: |
          mkdir -p dist
          go build -o dist/task-cli-${GOOS}-${GOARCH}
        shell: bash

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: task-cli-${{ matrix.os }}-${{ matrix.go-version }}
          path: dist/task-cli-${GOOS}-${GOARCH}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: task-cli-${{ matrix.os }}-${{ matrix.go-version }}
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
